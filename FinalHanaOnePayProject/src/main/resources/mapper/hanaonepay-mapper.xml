<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">



<mapper namespace="com.kopo.finalhanaonepayproject.hanaOnePay.model.DAO.HanaOnePayDAO">

    <select id="getHanaAccountDetailsByIdentity" resultType="com.kopo.finalhanaonepayproject.hanaOnePay.model.DTO.HanaOnePayAccountDTO">
        SELECT a.*
        FROM hana_account a
                 JOIN customer_hana cu ON a.identityNumber = cu.identityNumber
        WHERE cu.identityNumber = #{identityNumber}
    </select>

    <select id="getHanaCardDetailsByIdentity" resultType="com.kopo.finalhanaonepayproject.hanaOnePay.model.DTO.HanaOnePayhanaCardDTO">
        SELECT c.*
        FROM hana_card c
                 JOIN hana_account a ON c.accNumber = a.accNumber
                 JOIN customer_hana cu ON a.identityNumber = cu.identityNumber
        WHERE cu.identityNumber = #{identityNumber}
    </select>

<!--    하나대표카드-->
    <select id="getMainHanaCardByIdentity" resultType="com.kopo.finalhanaonepayproject.hanaOnePay.model.DTO.HanaOnePayhanaCardDTO">
        SELECT c.*
        FROM hana_card c
                 JOIN hana_account a ON c.accNumber = a.accNumber
                 JOIN customer_hana cu ON a.identityNumber = cu.identityNumber
        WHERE cu.identityNumber = #{identityNumber}
    </select>

    <!--    하나신용카드-->
    <select id="getHanaCreditCardByIdentity" resultType="com.kopo.finalhanaonepayproject.hanaOnePay.model.DTO.HanaOnePayhanaCardDTO">
        SELECT c.*
        FROM hana_card c
                 JOIN hana_account a ON c.accNumber = a.accNumber
                 JOIN customer_hana cu ON a.identityNumber = cu.identityNumber
        WHERE cu.identityNumber = #{identityNumber}
        AND c.cardTypeCode = '1'
    </select>

<!--    신용카드의 전월 1일부터 말일까지의 거래내역에서 금액합산-->
    <select id="getLastMonthTotalAmount" resultType="java.math.BigDecimal">
        SELECT SUM(PAYAMOUNT) AS TotalAmount
        FROM hana_card_payment_log
        WHERE CARDNUMBER = #{cardNumber}
          AND PAYDATE BETWEEN TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE, -1), 'MM'), 'YYYY-MM-DD')
            AND TO_CHAR(LAST_DAY(ADD_MONTHS(SYSDATE, -1)), 'YYYY-MM-DD')
    </select>


    <select id="getRegisteredCards" parameterType="string" resultType="com.kopo.finalhanaonepayproject.hanaOnePay.model.DTO.HanaOnePayCardDTO">
        SELECT * FROM payCard WHERE identityNumber = #{identityNumber}
    </select>

    <!-- 페이카드 insert -->
    <insert id="insertCard" parameterType="com.kopo.finalhanaonepayproject.hanaOnePay.model.DTO.HanaOnePayCardDTO">
        INSERT INTO payCard (cardNumber, identityNumber, accNumber, cardName, validityPeriod, cardStatus, cvc, joinDate, cardCode, cardTypeCode, limit)
        VALUES (#{cardNumber}, #{identityNumber}, #{accNumber}, #{cardName}, #{validityPeriod}, #{cardStatus}, #{cvc}, SYSDATE, #{cardCode}, #{cardTypeCode}, #{limit})
    </insert>

    <!-- 페이카드 모두 select -->
    <select id="getAllCards" resultType="com.kopo.finalhanaonepayproject.hanaOnePay.model.DTO.HanaOnePayCardDTO">
        SELECT * FROM payCard
    </select>

<!--    &lt;!&ndash;    하나카드 이번달 사용금액 조회 &ndash;&gt;-->
<!--    <select id="" resultType="com.kopo.finalhanaonepayproject.hanaOnePay.model.DTO.HanaOnePayCardDTO">-->
<!--        SELECT SUM(payAmount) AS 이번달_총_사용금액-->
<!--        FROM hana_card_payment_log-->
<!--        WHERE SUBSTR(payDate, 1, 7) = TO_CHAR(SYSDATE, 'YYYY-MM')-->
<!--    </select>-->

    <!--   한 회원이 갖고 있는 하나카드 정보 조회 -->
    <select id="getOnlyHanaCardDetailsByIdentity" resultType="com.kopo.finalhanaonepayproject.hanaOnePay.model.DTO.HanaOnePayhanaCardDTO">
        select c.cardNumber
        from hana_card c
                 JOIN hana_account a ON c.accNumber = a.accNumber
                 JOIN customer_hana cu ON a.identityNumber = cu.identityNumber
        where cu.identityNumber = #{identityNumber}

    </select>
    <!--    하나카드 이번달 거래내역 조회 -->
    <select id="getThisMonthTransData" resultType="com.kopo.finalhanaonepayproject.hanaOnePay.model.DTO.HanaOnePayTransDTO">
        SELECT *
        FROM hana_card_payment_log
        WHERE SUBSTR(payDate, 1, 7) = TO_CHAR(SYSDATE, 'YYYY-MM')
        AND cardNumber = #{cardNumber}
    </select>

<!--    하나카드 이번달 총 사용 금액-->
    <select id="getThisMonthTotalAmount" resultType="int">
        SELECT SUM(payAmount) AS 이번달_총_사용금액
        FROM hana_card_payment_log
        WHERE SUBSTR(payDate, 1, 7) = TO_CHAR(SYSDATE, 'YYYY-MM')
        AND cardNumber = #{cardNumber}
    </select>



    <select id="">
        select distinct l.cardNumber
        from hana_card_payment_log l
                 JOIN hana_card c ON l.cardNumber = c.cardNumber
                 JOIN hana_account a ON c.accNumber = a.accNumber
                 JOIN customer_hana cu ON a.identityNumber = cu.identityNumber
        where cu.identityNumber = #{identityNumber};
    </select>

    <select id="getCardsByBusinessCodes" parameterType="list" resultType="com.kopo.finalhanaonepayproject.hanaOnePay.model.DTO.CardItemDTO">
        SELECT ci.cardName, ci.cardTypeCode, ci.cardDesc, ci.annualFee
        FROM cardItem ci
        JOIN cardBenefit cb ON ci.cardName = cb.cardName
        WHERE cb.businessCode IN
        <foreach item="businessCode" collection="list" open="(" separator="," close=")">
            #{businessCode}
        </foreach>
    </select>

<!--    카드결제매퍼-->
    <!-- 카드가 신용인지 체크인지 검사위해 조회 -->
    <select id="getCardTypeByCardNumberAndIdentityNumber" resultType="string">
        SELECT i.cardTypeCode
        FROM ${tableCode}_card c
                 JOIN carditem i ON c.cardName = i.cardName
                 JOIN ${tableCode}_account a ON c.accNumber = a.accNumber
                 JOIN customer_${tableCode} cu ON a.identityNumber = cu.identityNumber
        WHERE c.cardNumber = #{cardNumber} AND cu.identityNumber = #{identityNumber}
    </select>

    <!-- 카드가 활성상태인지 확인하기 위해 조회 -->
    <select id="getCardStatusByCardNumberAndIdentityNumber" resultType="String">
        SELECT c.cardStatus
        FROM ${tableCode}_card c
                 JOIN carditem p ON c.cardName = p.cardName
                 JOIN ${tableCode}_account a ON c.accNumber = a.accNumber
                 JOIN customer_${tableCode} cu ON a.identityNumber = cu.identityNumber
        WHERE c.cardNumber = #{cardNumber} AND cu.identityNumber = #{identityNumber}
    </select>

    <!-- 결제카드의 잔액을 조회 for 체크카드 -->
    <select id="getAccountBalanceByCardNumber" resultType="BigDecimal">
        SELECT a.accBalance
        FROM ${tableCode}_card c
                 JOIN ${tableCode}_account a ON c.accNumber = a.accNumber
        WHERE c.cardNumber = #{cardNumber}
    </select>

    <!-- 결제 시 계좌 잔액 마이너스 업데이트 for 체크카드 -->
    <update id="updateAccountBalanceByCardNumber">
        UPDATE ${tableCode}_account a
        SET a.accbalance = a.accbalance - #{amount}
        WHERE a.accNumber = (
            SELECT c.accNumber
            FROM ${tableCode}_card c
            WHERE c.cardNumber = #{cardNumber}
        )
    </update>

    <!--    신용카드 한도 조회-->
    <select id="getCreditCardLimitByCardNumberAndIdentityNumber" resultType="BigDecimal">
        SELECT c.limit
        FROM ${tableCode}_card c
                 JOIN ${tableCode}_account a ON c.accNumber = a.accNumber
                 JOIN customer_${tableCode} cu ON a.identityNumber = cu.identityNumber
        WHERE c.cardNumber = #{cardNumber} AND cu.identityNumber = #{identityNumber}
    </select>

    <!--   결제 시 신용카드 한도 update-->
    <update id="updateCreditCardLimitByCardNumberAndIdentityNumber">
        UPDATE ${tableCode}_card c
        SET c.limit = c.limit - #{amount}
        WHERE c.cardNumber = #{cardNumber}
          AND EXISTS (
            SELECT 1
            FROM ${tableCode}_account a
                     JOIN customer_${tableCode} cu ON a.identityNumber = cu.identityNumber
            WHERE a.accNumber = c.accNumber
              AND cu.identityNumber = #{identityNumber}
        )
    </update>

    <!-- 카드 거래내역에 인서트 -->
    <insert id="insertCardPaymentLog">
        INSERT INTO ${tableCode}_card_payment_log
            (payId, cardNumber, payAmount)
        VALUES
            (payment_log_seq.NEXTVAL, #{cardNumber}, #{payAmount})
    </insert>


</mapper>