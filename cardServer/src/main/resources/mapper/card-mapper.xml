<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.kopo.cardserver.model.DAO.CardDAO">

<!--    고객 계좌 조회-->
    <select id="getCustomerAccounts" resultType="com.kopo.cardserver.model.DTO.AccountDTO">
        SELECT c.*
        FROM ${tableCode}_account c
                 JOIN ${tableCode}_customer cu ON c.identityNumber = cu.identityNumber
        WHERE cu.identityNumber = #{identityNumber}
    </select>

<!--    고객 카드 조회-->
    <select id="getCustomerCards" resultType="com.kopo.cardserver.model.DTO.CardDTO">
        SELECT c.*
        FROM ${tableCode}_card c
                 JOIN ${tableCode}_account a ON c.accNumber = a.accNumber
                 JOIN ${tableCode}_customer cu ON a.identityNumber = cu.identityNumber
        WHERE cu.identityNumber = #{identityNumber}
    </select>

    <!-- 카드가 신용인지 체크인지 검사위해 조회 -->
    <select id="getCardTypeByCardNumberAndIdentityNumber" resultType="string">
        SELECT i.cardTypeCode
        FROM ${tableCode}_card c
                 JOIN ${tableCode}_card_item i ON c.cardItemId = i.cardItemId
                 JOIN ${tableCode}_account a ON c.accNumber = a.accNumber
                 JOIN ${tableCode}_customer cu ON a.identityNumber = cu.identityNumber
        WHERE c.cardNumber = #{cardNumber} AND cu.identityNumber = #{identityNumber}
    </select>

    <!-- 카드가 활성상태인지 확인하기 위해 조회 -->
    <select id="getCardStatusByCardNumberAndIdentityNumber" resultType="String">
        SELECT c.cardStatus
        FROM ${tableCode}_card c
                 JOIN ${tableCode}_card_item p ON c.cardItemId = p.cardItemId
                 JOIN ${tableCode}_account a ON c.accNumber = a.accNumber
                 JOIN ${tableCode}_customer cu ON a.identityNumber = cu.identityNumber
        WHERE c.cardNumber = #{cardNumber} AND cu.identityNumber = #{identityNumber}
    </select>

    <!-- 결제카드의 잔액을 조회 for 체크카드 -->
    <select id="getAccountBalanceByCardNumber" resultType="BigDecimal">
        SELECT a.accBalance
        FROM ${tableCode}_card c
                 JOIN ${tableCode}_account a ON c.accNumber = a.accNumber
        WHERE c.cardNumber = #{cardNumber}
    </select>

    <!-- 결제 시 계좌 잔액 마이너스 업데이트 for 체크카드 -->
    <update id="updateAccountBalanceByCardNumber">
        UPDATE ${tableCode}_account a
        SET a.accbalance = a.accbalance - #{amount}
        WHERE a.accNumber = (
            SELECT c.accNumber
            FROM ${tableCode}_card c
            WHERE c.cardNumber = #{cardNumber}
        )
    </update>

    <!--    신용카드 한도 조회-->
    <select id="getCreditCardLimitByCardNumberAndIdentityNumber" resultType="BigDecimal">
        SELECT c.limit
        FROM ${tableCode}_card c
                 JOIN ${tableCode}_account a ON c.accNumber = a.accNumber
                 JOIN ${tableCode}_customer cu ON a.identityNumber = cu.identityNumber
        WHERE c.cardNumber = #{cardNumber} AND cu.identityNumber = #{identityNumber}
    </select>

    <!--   결제 시 신용카드 한도 update-->
    <update id="updateCreditCardLimitByCardNumberAndIdentityNumber">
        UPDATE ${tableCode}_card c
        SET c.limit = c.limit - #{amount}
        WHERE c.cardNumber = #{cardNumber}
          AND EXISTS (
            SELECT 1
            FROM ${tableCode}_account a
                     JOIN ${tableCode}_customer cu ON a.identityNumber = cu.identityNumber
            WHERE a.accNumber = c.accNumber
              AND cu.identityNumber = #{identityNumber}
        )
    </update>

    <!-- 결제 시 미결제 금액 관리(결제 보류) 테이블에 해당 정보 기록 -->
    <insert id="insertPendingPayment">
        INSERT INTO ${tableCode}_card_pending_pay (pendingId, cardNumber, payAmount, withdrawalDate, payStatus)
        VALUES (${tableCode}_card_pending_pay_seq.NEXTVAL, #{cardNumber}, #{payAmount}, #{withdrawalDate}, #{payStatus})
    </insert>

    <select id="getPendingPaymentsByDate" resultType="com.kopo.cardserver.model.DTO.PendingPaymentDTO">
        SELECT * FROM ${tableCode}_card_pending_pay
        WHERE withdrawalDate = #{withdrawalDate} AND payStatus = 'Pending'
    </select>

    <update id="updatePayStatusToApproval">
        UPDATE ${tableCode}_card_pending_pay
        SET payStatus = 'Approval'
        WHERE pendingId = #{pendingId}
    </update>

    <!-- 계좌의 잔액을 조회 -->
    <select id="getAccountBalanceByAccountNumber" resultType="BigDecimal">
        SELECT accBalance
        FROM ${table}_account
        WHERE accNumber = #{accountNumber}
    </select>

    <!-- 결제 시 계좌 잔액 마이너스 업데이트 -->
    <update id="updateAccountBalanceByAccountNumber">
        UPDATE ${table}_account
        SET accbalance = accbalance + #{amount}
        WHERE accNumber = #{accountNumber}
    </update>

    <!-- 계좌 거래내역에 인서트 -->
    <insert id="insertAccPaymentLog" parameterType="com.kopo.cardserver.model.DTO.AccPaymentLogDTO">
        INSERT INTO ${table}_acc_payment_log
            (payId, accNumber, payAmount)
        VALUES
            (payment_log_seq.NEXTVAL, #{accountNumber.accNumber}, #{accountNumber.payAmount})
    </insert>

    <!-- 카드 거래내역에 인서트 -->
    <insert id="insertCardPaymentLog">
        INSERT INTO ${tableCode}_card_payment_log
            (payId, cardNumber, payAmount)
        VALUES
            (payment_log_seq.NEXTVAL, #{cardNumber}, #{payAmount})
    </insert>

<!--    &lt;!&ndash;    차트 데이터 조회   &ndash;&gt;-->
<!--    <select id="getPendingPaymentsByDate" resultType="com.kopo.cardserver.model.DTO.ChartDTO">-->
<!--        SELECT * FROM ${tableCode}_card_pending_pay-->
<!--        WHERE withdrawalDate = #{withdrawalDate} AND payStatus = 'Pending'-->
<!--    </select>-->

    <select id="selectTransactionsByCard" resultType="com.kopo.cardserver.model.DTO.HanaOnePayTransDTO">
        select *
        from ${cardCode}_card_payment_log
        where cardNumber = #{cardNumber}
    </select>

    <!-- 신용카드 리스트 조회 -->
    <select id="getCustomerCreditCards" resultType="com.kopo.cardserver.model.DTO.CreditCardDTO">
        SELECT *
        FROM ${tableCode}_card
        WHERE cardTypeCode = '1'
    </select>

    <!-- 전월 거래내역 총 사용 금액 조회 쿼리 -->
    <select id="calculateTotalSpentAmountForPreviousMonth" resultType="java.math.BigDecimal">
        SELECT SUM(PAYAMOUNT) AS TotalAmount
        FROM ${tableCode}_card_payment_log
        WHERE CARDNUMBER = #{cardNumber}
          AND PAYDATE BETWEEN TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE, -1), 'MM'), 'YYYY-MM-DD')
            AND TO_CHAR(LAST_DAY(ADD_MONTHS(SYSDATE, -1)), 'YYYY-MM-DD')
    </select>

<!--    전월 거래내역에서 사용한 만큼 카드의 연동계좌에서 차감-->
    <update id="deductAmountFromLinkedAccount">
        UPDATE ${tableCode}_account a
        SET accbalance = accbalance - #{totalSpentAmount}
        WHERE a.accNumber = (
            SELECT accNumber
            FROM ${tableCode}_card
            WHERE cardNumber = #{cardNumber}
        )
    </update>

</mapper>

